아이템 1
- 생성자 대신 정적 팩터리 메서드를 고려하라
클라이언트가 클래스의 인스턴스를 얻는 전톡적인 수단은 public 생성자다.
하지만 클래스는 생성자와 별도로 정적 팩터리 메서드를 제공할 수 있다. 그 클래스의 인스턴스를 반환하는 단순한 정적 메서드이다.

정적 팩토리 메서드란?
정적(static).팩토리(factory).메서드(method)
정적 팩토리 메서드란 객체 생성의 역할을 하는 클래스 메서드라는 의미로 요약해볼 수 있다.

객체를 생성하는 역할은 자바에서 제공하는 "생성자"가 하는데, 왜 정적 팩토리 메서드를 따로 만들어서 객체를 생성할까?
1. 생성자는 반환될 객체의 이름을 가질 수 없다. 반면 정적 팩터리는 이름만 잘 지으면 특성을 쉽게 묘사할 수 있다.
2. 호출될 때마다 인스턴스를 새로 생성하지는 않아도 된다. (반복되는 요청 객체 반환하는 식으로 정적 팩터리 방식은 인스턴스를 철저히 통제할 수 있다.)
3. 반환 타입의 하위 타입 객체를 반환할 수 있는 능력이 있다.
4. 입력 매개변수에 따라 매번 다른 클래스의 객체를 반환할 수 있다.
5. 정적 팩터리 메서드를 작성하는 시점에는 반환할 객체의 클래스가 존재하지 않아도 된다. (대표적 프레임워크 JDBC)