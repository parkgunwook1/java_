public void rule();
몸통부가 존재하지 않는 미완성 메소드 == 추상 메소드
몸통부가 없는 미완성메소드를 정의하고자 하면 abstract 예약어를 사용해야한다.

미완성 메소드가 하나라도 현재 클래스에 포함되는 순간, 해당 클래스 또한 미완성 클래스가 되어버린다.
따라서 클래스명 앞에도 abstract 예약어를 적어줘야한다.

추상 메서드 사용시 abstract 예약어를 사용해야한다. 클래스 내에 abstract 메서드가 하나라도 존재한다면
클래스 앞에도 abstract 예약어를 사용해야한다.

미완성된 클래스인 추상 클래스를 상속 받으면 하위 클래스에서는 반드시
부모 클래스에 있는 미완성된 추상 메서드를 강제적으로 구현해야 한다.
구현을 안할시 자식 클래스는 에러가 난다.

추상 클래스를 상속받은 자식 클래스는 같은 메서드를 같게 된다.

Sports s = new Sports(); -> 불가하다.
추상 클래스는 객체 생성이 불가능하다.
왜냐하면 미완성된 클래스이기 때문이다.

단, 객체생성은 불가능하지만, 참조변수는 사용가능
즉, 다형성을 적용해서 자식객체를 생성하고 이를 저장하는 용도로 사용 가능하다.
Sports s;
s = new Football();
s.rule();

정리
추상 클래스
- 미완성된 클래스 abstract class
- 객체생성 불가능(단, 참조변수(래퍼런스)변수 선언 가능)
- 추상 클래스 내부에 추상메서드가 존재하는 순간 해당 클래스는 반드시 추상클래스로 정의

단, 추상메소드가 굳이 없어도 추상클래스로 둘수 있다.
언제? 클래스가 아직 구체적으로 덜 구현된 상태인것으로 보이는 경우(개념적)
      현재 이 클래스를 객체 생성이 불가하게끔 하고자 할 때 (기술적)

  - 객체생성은 불가능한데 참조 변수로 선언 가능하다라는 특징은 다형성을 적용할 수 있다로 해석된다.

객체생성을 막아놓을 때 abstract와 접근제한자 private 가 있다.

추상메서드
  - 미완성된 메소드로 몸통부 {}가 구현되어 있지 않은 메소드
  - 자식클래스에서 오버라이딩을 통해 완성됨 ( 강제로 오버라이딩 해야함 )
    => 오버라이딩 하지 않을 경우 에러 발생
    => 메소드 사용의 통일성 확보 목적
    => 표준화된 틀일 제공할 수 있는 목적s